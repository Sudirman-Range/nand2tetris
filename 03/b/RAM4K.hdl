// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=register1, b=register2, c=register3, d=register4, e=register5, f=register6, g=register7, h=register8);
    RAM512(in=in, load=register1, address=address[0..8], out=register1out);
    RAM512(in=in, load=register2, address=address[0..8], out=register2out);
    RAM512(in=in, load=register3, address=address[0..8], out=register3out);
    RAM512(in=in, load=register4, address=address[0..8], out=register4out);
    RAM512(in=in, load=register5, address=address[0..8], out=register5out);
    RAM512(in=in, load=register6, address=address[0..8], out=register6out);
    RAM512(in=in, load=register7, address=address[0..8], out=register7out);
    RAM512(in=in, load=register8, address=address[0..8], out=register8out);
    Mux8Way16(a=register1out, b=register2out, c=register3out, d=register4out, e=register5out, f=register6out, g=register7out, h=register8out, sel=address[9..11], out=out);
}